<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_std__types_8h_source">
<title>std_types.h</title>
<indexterm><primary>F:/Carier/Embedded/PIC/ElectricalWaterHeater/ServiceLayer/std_types.h</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/*&#32;Microchip&#32;Technology&#32;Inc.&#32;and&#32;its&#32;subsidiaries.&#32;&#32;You&#32;may&#32;use&#32;this&#32;software&#32;</emphasis>
00002 <emphasis role="comment">&#32;*&#32;and&#32;any&#32;derivatives&#32;exclusively&#32;with&#32;Microchip&#32;products.&#32;</emphasis>
00003 <emphasis role="comment">&#32;*&#32;</emphasis>
00004 <emphasis role="comment">&#32;*&#32;THIS&#32;SOFTWARE&#32;IS&#32;SUPPLIED&#32;BY&#32;MICROCHIP&#32;&quot;AS&#32;IS&quot;.&#32;&#32;NO&#32;WARRANTIES,&#32;WHETHER&#32;</emphasis>
00005 <emphasis role="comment">&#32;*&#32;EXPRESS,&#32;IMPLIED&#32;OR&#32;STATUTORY,&#32;APPLY&#32;TO&#32;THIS&#32;SOFTWARE,&#32;INCLUDING&#32;ANY&#32;IMPLIED&#32;</emphasis>
00006 <emphasis role="comment">&#32;*&#32;WARRANTIES&#32;OF&#32;NON-INFRINGEMENT,&#32;MERCHANTABILITY,&#32;AND&#32;FITNESS&#32;FOR&#32;A&#32;</emphasis>
00007 <emphasis role="comment">&#32;*&#32;PARTICULAR&#32;PURPOSE,&#32;OR&#32;ITS&#32;INTERACTION&#32;WITH&#32;MICROCHIP&#32;PRODUCTS,&#32;COMBINATION&#32;</emphasis>
00008 <emphasis role="comment">&#32;*&#32;WITH&#32;ANY&#32;OTHER&#32;PRODUCTS,&#32;OR&#32;USE&#32;IN&#32;ANY&#32;APPLICATION.&#32;</emphasis>
00009 <emphasis role="comment">&#32;*</emphasis>
00010 <emphasis role="comment">&#32;*&#32;IN&#32;NO&#32;EVENT&#32;WILL&#32;MICROCHIP&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;INDIRECT,&#32;SPECIAL,&#32;PUNITIVE,&#32;</emphasis>
00011 <emphasis role="comment">&#32;*&#32;INCIDENTAL&#32;OR&#32;CONSEQUENTIAL&#32;LOSS,&#32;DAMAGE,&#32;COST&#32;OR&#32;EXPENSE&#32;OF&#32;ANY&#32;KIND&#32;</emphasis>
00012 <emphasis role="comment">&#32;*&#32;WHATSOEVER&#32;RELATED&#32;TO&#32;THE&#32;SOFTWARE,&#32;HOWEVER&#32;CAUSED,&#32;EVEN&#32;IF&#32;MICROCHIP&#32;HAS&#32;</emphasis>
00013 <emphasis role="comment">&#32;*&#32;BEEN&#32;ADVISED&#32;OF&#32;THE&#32;POSSIBILITY&#32;OR&#32;THE&#32;DAMAGES&#32;ARE&#32;FORESEEABLE.&#32;&#32;TO&#32;THE&#32;</emphasis>
00014 <emphasis role="comment">&#32;*&#32;FULLEST&#32;EXTENT&#32;ALLOWED&#32;BY&#32;LAW,&#32;MICROCHIP&apos;S&#32;TOTAL&#32;LIABILITY&#32;ON&#32;ALL&#32;CLAIMS&#32;</emphasis>
00015 <emphasis role="comment">&#32;*&#32;IN&#32;ANY&#32;WAY&#32;RELATED&#32;TO&#32;THIS&#32;SOFTWARE&#32;WILL&#32;NOT&#32;EXCEED&#32;THE&#32;AMOUNT&#32;OF&#32;FEES,&#32;IF&#32;</emphasis>
00016 <emphasis role="comment">&#32;*&#32;ANY,&#32;THAT&#32;YOU&#32;HAVE&#32;PAID&#32;DIRECTLY&#32;TO&#32;MICROCHIP&#32;FOR&#32;THIS&#32;SOFTWARE.</emphasis>
00017 <emphasis role="comment">&#32;*</emphasis>
00018 <emphasis role="comment">&#32;*&#32;MICROCHIP&#32;PROVIDES&#32;THIS&#32;SOFTWARE&#32;CONDITIONALLY&#32;UPON&#32;YOUR&#32;ACCEPTANCE&#32;OF&#32;THESE&#32;</emphasis>
00019 <emphasis role="comment">&#32;*&#32;TERMS.&#32;</emphasis>
00020 <emphasis role="comment">&#32;*/</emphasis>
00021 
00022 <emphasis role="comment">/*&#32;</emphasis>
00023 <emphasis role="comment">&#32;*&#32;File:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std_types.h</emphasis>
00024 <emphasis role="comment">&#32;*&#32;Author:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mahmoud&#32;Abdelbary</emphasis>
00025 <emphasis role="comment">&#32;*&#32;Comments:</emphasis>
00026 <emphasis role="comment">&#32;*&#32;Revision&#32;history:&#32;</emphasis>
00027 <emphasis role="comment">&#32;*/</emphasis>
00028 
00029 <emphasis role="comment">//&#32;This&#32;is&#32;a&#32;guard&#32;condition&#32;so&#32;that&#32;contents&#32;of&#32;this&#32;file&#32;are&#32;not&#32;included</emphasis>
00030 <emphasis role="comment">//&#32;more&#32;than&#32;once.&#32;&#32;</emphasis>
00031 <emphasis role="preprocessor">#ifndef&#32;STD_TYPES_H</emphasis>
00032 <emphasis role="preprocessor">#define&#32;STD_TYPES_H</emphasis>
00033 
00034 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common__macros_8h">common_macros.h</link>&quot;</emphasis>
00035 <emphasis role="comment">/*&#32;Boolean&#32;Data&#32;Type&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00036"/><link linkend="_std__types_8h_1a97a80ca1602ebf2303258971a2c938e2">00036</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_std__types_8h_1a97a80ca1602ebf2303258971a2c938e2">bool</link>;
00037 
00038 <emphasis role="comment">/*&#32;Boolean&#32;Values&#32;*/</emphasis>
00039 <emphasis role="preprocessor">#ifndef&#32;FALSE</emphasis>
00040 <emphasis role="preprocessor">#define&#32;FALSE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0u)</emphasis>
00041 <emphasis role="preprocessor">#endif</emphasis>
00042 
00043 <emphasis role="preprocessor">#ifndef&#32;TRUE</emphasis>
00044 <emphasis role="preprocessor">#define&#32;TRUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1u)</emphasis>
00045 <emphasis role="preprocessor">#endif</emphasis>
00046 
00047 <emphasis role="preprocessor">#define&#32;HIGHL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xFF)</emphasis>
00048 <emphasis role="preprocessor">#define&#32;LOWL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x00)</emphasis>
00049 
00050 
00051 <emphasis role="preprocessor">#define&#32;HIGH_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1u)</emphasis>
00052 <emphasis role="preprocessor">#define&#32;LOW_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0u)</emphasis>
00053 
00054 
00055 <emphasis role="preprocessor">#define&#32;INPUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xFF)</emphasis>
00056 <emphasis role="preprocessor">#define&#32;OUTPUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x00)</emphasis>
00057 
00058 <emphasis role="preprocessor">#define&#32;ALL_PORT_MASK&#32;&#32;&#32;(0xFF)</emphasis>
00059 
00060 <emphasis role="preprocessor">#define&#32;PULL_UP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xFF)</emphasis>
00061 <emphasis role="preprocessor">#define&#32;PULL_DOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xFF)</emphasis>
00062 
00063 <emphasis role="preprocessor">#define&#32;STATIC&#32;&#32;&#32;static</emphasis>
<anchor xml:id="_std__types_8h_source_1l00064"/><link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">00064</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;..&#32;255&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00065"/><link linkend="_std__types_8h_1a54cceacffb6d6dff03bf69f786d431a9">00065</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a54cceacffb6d6dff03bf69f786d431a9">sint8_t</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-128&#32;..&#32;+127&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00066"/><link linkend="_std__types_8h_1a1f1825b69244eb3ad2c7165ddc99c956">00066</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a1f1825b69244eb3ad2c7165ddc99c956">uint16_t</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;..&#32;65535&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00067"/><link linkend="_std__types_8h_1ae4c9b951dbb7355563c313abca5e2e75">00067</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1ae4c9b951dbb7355563c313abca5e2e75">sint16_t</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;-32768&#32;..&#32;+32767&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00068"/><link linkend="_std__types_8h_1a06896e8c53f721507066c079052171f8">00068</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a06896e8c53f721507066c079052171f8">uint32_t</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;..&#32;4294967295&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00069"/><link linkend="_std__types_8h_1a73705d44e0ddde601ded7d759dd0eaed">00069</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a73705d44e0ddde601ded7d759dd0eaed">sint32_t</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-2147483648&#32;..&#32;+2147483647&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00070"/><link linkend="_std__types_8h_1aaa5d1cd013383c889537491c3cfd9aad">00070</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1aaa5d1cd013383c889537491c3cfd9aad">uint64_t</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;0..18446744073709551615&#32;&#32;*/</emphasis>
<anchor xml:id="_std__types_8h_source_1l00071"/><link linkend="_std__types_8h_1a50f1081965dcc748269a971b74a60cc3">00071</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a50f1081965dcc748269a971b74a60cc3">sint64_t</link>;
<anchor xml:id="_std__types_8h_source_1l00072"/><link linkend="_std__types_8h_1a4611b605e45ab401f02cab15c5e38715">00072</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a4611b605e45ab401f02cab15c5e38715">float32_t</link>;
<anchor xml:id="_std__types_8h_source_1l00073"/><link linkend="_std__types_8h_1ac55f3ae81b5bc9053760baacf57e47f4">00073</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1ac55f3ae81b5bc9053760baacf57e47f4">float64_t</link>;
00074 
00075 <emphasis role="preprocessor">#define&#32;NULL&#32;((void&#32;*)0)</emphasis>
00076 
00077 
00078 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
