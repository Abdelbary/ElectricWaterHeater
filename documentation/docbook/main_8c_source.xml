<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main_8c_source">
<title>main.c</title>
<indexterm><primary>F:/Carier/Embedded/PIC/ElectricalWaterHeater/Application/main.c</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">&#32;*&#32;File:&#32;&#32;&#32;main.c</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Author:&#32;Mahmoud&#32;Abdelbary</emphasis>
00004 <emphasis role="comment">&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Created&#32;on&#32;June&#32;29,&#32;2020,&#32;10:51&#32;AM</emphasis>
00006 <emphasis role="comment">&#32;*/</emphasis>
00007 <emphasis role="preprocessor">#include&#32;&quot;../MCAL/Registers.h&quot;</emphasis>
00008 <emphasis role="preprocessor">#include&#32;&quot;../ServiceLayer/std_types.h&quot;</emphasis>
00009 <emphasis role="preprocessor">#include&#32;&quot;../ServiceLayer/Config.h&quot;</emphasis>
00010 <emphasis role="preprocessor">#include&#32;&quot;../HAL/7SEG/7seg.h&quot;</emphasis>
00011 <emphasis role="preprocessor">#include&#32;&quot;../MCAL/DIO/DIO.h&quot;</emphasis>
00012 <emphasis role="preprocessor">#include&#32;&quot;../HAL/7SEG/unitTest/7seg_test.h&quot;</emphasis>
00013 <emphasis role="preprocessor">#include&#32;&quot;../HAL/BTN/unit&#32;test/btn_test.h&quot;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&quot;../HAL/BTN/btn.h&quot;</emphasis>
00015 <emphasis role="preprocessor">#include&#32;&quot;../HAL/eeprom_ext/eeprom_ext.h&quot;</emphasis>
00016 <emphasis role="preprocessor">#include&#32;&quot;../MCAL/ADC/adc.h&quot;</emphasis>
00017 <emphasis role="preprocessor">#include&#32;&quot;../MCAL/ISR/isr.h&quot;</emphasis>
00018 <emphasis role="preprocessor">#include&#32;&quot;../MCAL/TIMER/timer.h&quot;</emphasis>
00019 <emphasis role="preprocessor">#include&#32;&quot;../ServiceLayer/SOS/SOS.h&quot;</emphasis>
00020 <emphasis role="preprocessor">#include&#32;&quot;../MCAL/I2C/i2c.h&quot;</emphasis>
00021 <emphasis role="preprocessor">#include&#32;&lt;xc.h&gt;</emphasis>
00022 <emphasis role="preprocessor">#include&#32;&lt;pic16f877a.h&gt;</emphasis>
00023 
00024 <emphasis role="preprocessor">#define&#32;LEDPIN&#32;0</emphasis>
00025 <emphasis role="preprocessor">#define&#32;ON_OFF_BTN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
00026 <emphasis role="preprocessor">#define&#32;UP_BTN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
00027 <emphasis role="preprocessor">#define&#32;DOWN_BTN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2</emphasis>
00028 <emphasis role="preprocessor">#define&#32;USED_PATTERN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x3D)</emphasis>
00029 <emphasis role="preprocessor">#define&#32;TEMP_VLAUES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;10</emphasis>
00030 <emphasis role="preprocessor">#define&#32;SSD_FLASHING_CYCLE&#32;&#32;20</emphasis>
00031 <emphasis role="preprocessor">#define&#32;TEMP_STEP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5</emphasis>
00032 <emphasis role="preprocessor">#define&#32;MAX_TEMP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(75)</emphasis>
00033 <emphasis role="preprocessor">#define&#32;MIN_TEMP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(25)</emphasis>
<anchor xml:id="_main_8c_source_1l00034"/><link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a5801689c2e6a787e012bf452ee0fabe3">00034</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>{<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a5801689c2e6a787e012bf452ee0fabe3">TEMP_SET_MODE</link>,<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a1f6ccf55deffd73d67d5390d50ad637a">NORM_MODE</link>}<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732">operationMode_t</link>;
00035 
00036 
00037 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;tempValues[TEMP_VLAUES];
00038 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;currentTemp;
00039 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732">operationMode_t</link>&#32;gu8_mode;
00040 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;gu8_settedTemp;&#32;
00041 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;gu8_TempControlFlag;
00042 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;gu8_tempToAchive;
00043 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;gu8_deviceDisableFlag;
00044 
00045 
<anchor xml:id="_main_8c_source_1l00046"/><link linkend="_main_8c_1aabcbdc9715896bcbf677585867fd734c">00046</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_main_8c_1aabcbdc9715896bcbf677585867fd734c">tempControlTask</link>()
00047 {
00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(gu8_TempControlFlag)
00055 &#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_counter&#32;&#32;&#32;=&#32;0;
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_heaterOn&#32;&#32;=&#32;FALSE;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_coolerOn&#32;&#32;=&#32;FALSE;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_i&#32;=&#32;0;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a1f1825b69244eb3ad2c7165ddc99c956">uint16_t</link>&#32;u8_averageTempValue&#32;=&#32;0;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;u8_i&lt;&#32;TEMP_VLAUES&#32;&amp;&amp;&#32;&#32;tempValues[u8_i]&#32;;u8_i++)
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_averageTempValue&#32;+=&#32;&#32;tempValues[u8_i];
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_averageTempValue/=u8_i;
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_heaterOn&#32;==&#32;FALSE&#32;&amp;&amp;&#32;u8_coolerOn&#32;==&#32;FALSE)
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_averageTempValue&#32;&lt;=&#32;gu8_tempToAchive-TEMP_STEP)
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(HEATER_ELEMENT,HIGHL);
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_heaterOn&#32;=&#32;TRUE;
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(COOLER_ELEMENT,HIGHL);
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_coolerOn&#32;=&#32;TRUE;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(u8_heaterOn&#32;&amp;&amp;&#32;u8_averageTempValue&#32;&gt;=&#32;gu8_tempToAchive+TEMP_STEP)
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//turn&#32;off&#32;heater&#32;and&#32;turn&#32;on&#32;cooler</emphasis>
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(HEATER_ELEMENT,LOWL);
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(COOLER_ELEMENT,HIGHL);
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(TEMP_CONTROL_LED,HIGHL);&#32;&#32;
00101 
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_heaterOn&#32;=&#32;FALSE;
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_coolerOn&#32;=&#32;TRUE;
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(u8_coolerOn&#32;&amp;&amp;&#32;u8_averageTempValue&#32;&lt;=&#32;gu8_tempToAchive-TEMP_STEP)
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//turn&#32;on&#32;heater&#32;and&#32;turn&#32;off&#32;cooler</emphasis>
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(HEATER_ELEMENT,HIGHL);
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(COOLER_ELEMENT,LOWL);
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00112 
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_heaterOn&#32;=&#32;TRUE;
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_coolerOn&#32;=&#32;FALSE;
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_heaterOn)
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_counter++;
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_counter&#32;==&#32;10)
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1aeaaeb5ff489bac3f6da33bfa3e8e083f">DIO_Toggle</link>(TEMP_CONTROL_LED);&#32;
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_counter&#32;=&#32;0;
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00132 &#32;&#32;&#32;&#32;}
00133 }
00134 
<anchor xml:id="_main_8c_source_1l00135"/><link linkend="_main_8c_1aa3704144322ffcbb82cc88ee36f1a9da">00135</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_main_8c_1aa3704144322ffcbb82cc88ee36f1a9da">buttonTask</link>()
00136 {
00137 &#32;&#32;&#32;&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3">BtnStateType</link>&#32;u8_onOffBtnStatus;
00138 &#32;&#32;&#32;&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3">BtnStateType</link>&#32;u8_upBtnStatus;
00139 &#32;&#32;&#32;&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3">BtnStateType</link>&#32;u8_downBtnStatus;
00140 &#32;&#32;&#32;&#32;<link linkend="_btn_8c_1af9d0881c43b0ff77296a25abd27b5929">BTN_Manager</link>();
00141 &#32;&#32;&#32;&#32;<link linkend="_btn_8c_1a5aeeef57fe3d8638de39db5ed01efaef">BTN_GetState</link>(&amp;u8_onOffBtnStatus,ON_OFF_BTN);
00142 &#32;&#32;&#32;&#32;<link linkend="_btn_8c_1a5aeeef57fe3d8638de39db5ed01efaef">BTN_GetState</link>(&amp;u8_upBtnStatus,UP_BTN);
00143 &#32;&#32;&#32;&#32;<link linkend="_btn_8c_1a5aeeef57fe3d8638de39db5ed01efaef">BTN_GetState</link>(&amp;u8_downBtnStatus,DOWN_BTN);
00144 &#32;&#32;&#32;&#32;
00150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_onOffBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>)
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_deviceDisableFlag&#32;=&#32;!gu8_deviceDisableFlag;
00152 &#32;&#32;&#32;&#32;
00153 &#32;&#32;&#32;&#32;
00163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(gu8_mode&#32;==&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a1f6ccf55deffd73d67d5390d50ad637a">NORM_MODE</link>)
00164 &#32;&#32;&#32;&#32;{
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_upBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>&#32;||&#32;u8_downBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>)
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_mode&#32;=&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a5801689c2e6a787e012bf452ee0fabe3">TEMP_SET_MODE</link>;
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_settedTemp&#32;&#32;=&#32;&#32;<link linkend="_eeprom__ext_8c_1a68ff2caae3c67d6e12b84a0f1164dd6a">e2pext_r</link>(0x00);
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00171 &#32;&#32;&#32;&#32;}
00172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(gu8_mode&#32;==&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a5801689c2e6a787e012bf452ee0fabe3">TEMP_SET_MODE</link>)
00173 &#32;&#32;&#32;&#32;{
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_btnPressCntr&#32;=&#32;0;
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_upBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>)
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_settedTemp+=(gu8_settedTemp&#32;==&#32;MAX_TEMP)?&#32;0&#32;:TEMP_STEP;
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(u8_downBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>)
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_settedTemp-=(gu8_settedTemp&#32;==&#32;MIN_TEMP)?&#32;0&#32;:TEMP_STEP;
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(u8_downBtnStatus&#32;&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a485383445338ef8e3b933a06b1663334">BUT_OFF</link>&#32;||&#32;u8_upBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a485383445338ef8e3b933a06b1663334">BUT_OFF</link>)
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00186 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;count&#32;the&#32;time&#32;no&#32;button&#32;has&#32;been&#32;pressed&#32;to&#32;implement&#32;a&#32;time&#32;out</emphasis>
00187 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;to&#32;exit&#32;TEMP_SET_MODE</emphasis>
00188 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_btnPressCntr++;
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00192 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;if&#32;either&#32;up&#32;or&#32;down&#32;buttons&#32;pressed&#32;reset&#32;timeout&#32;counter</emphasis>
00193 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_downBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>&#32;||&#32;u8_upBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;u8_upBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3ac0daf622963a46b0b67beb4a55d97d64">BUT_PRSSED</link>&#32;||&#32;u8_downBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3ac0daf622963a46b0b67beb4a55d97d64">BUT_PRSSED</link>)
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_btnPressCntr&#32;=&#32;0;
00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_btnPressCntr&#32;&gt;=&#32;100)
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_eeprom__ext_8c_1a3b6e76a761d4f025a99416f03ef098ed">e2pext_w</link>(0x00,gu8_settedTemp);
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_tempToAchive&#32;=&#32;gu8_settedTemp;
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_TempControlFlag&#32;=&#32;TRUE;
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_btnPressCntr&#32;=&#32;0;
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_mode&#32;=&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a1f6ccf55deffd73d67d5390d50ad637a">NORM_MODE</link>;
00214 
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;
00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00217 &#32;&#32;&#32;&#32;}
00218 &#32;&#32;&#32;
00219 &#32;&#32;&#32;&#32;
00220 }
00221 
00222 
<anchor xml:id="_main_8c_source_1l00223"/><link linkend="_main_8c_1ac1e5ea28aae6331165f91deabb3a7101">00223</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_main_8c_1ac1e5ea28aae6331165f91deabb3a7101">sevenSegTask</link>()
00224 {&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00235 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(gu8_mode&#32;==&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a1f6ccf55deffd73d67d5390d50ad637a">NORM_MODE</link>)
00236 &#32;&#32;&#32;&#32;{
00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_selectedSevenSeg&#32;=&#32;SEVEN_SEG_TWO;
00238 
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_selectedSevenSeg&#32;==&#32;SEVEN_SEG_TWO&#32;)
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_7seg_8c_1ae89a46a801483d679b68d653efd31267">sevenSegSendChar</link>(currentTemp%10,SEVEN_SEG_TWO);
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_7seg_8c_1ae89a46a801483d679b68d653efd31267">sevenSegSendChar</link>(currentTemp/10,SEVEN_SEG_ONE);
00243 &#32;&#32;&#32;
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00245 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;&#32;update&#32;u8_selectedSevenSeg&#32;variable&#32;to&#32;alternate&#32;between&#32;the&#32;two&#32;seven&#32;seg.</emphasis>
00246 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_selectedSevenSeg&#32;=&#32;(u8_selectedSevenSeg&#32;==&#32;SEVEN_SEG_ONE)?&#32;SEVEN_SEG_TWO&#32;:&#32;SEVEN_SEG_ONE;
00248 &#32;&#32;
00249 &#32;&#32;&#32;&#32;}
00250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;gu8_mode&#32;==&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a5801689c2e6a787e012bf452ee0fabe3">TEMP_SET_MODE</link>)
00251 &#32;&#32;&#32;&#32;{
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_ssdDisableFalg&#32;=&#32;FALSE;
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_flashCounter&#32;=&#32;0;
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_selectedSevenSeg&#32;=&#32;SEVEN_SEG_TWO;
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_selectedSevenSeg&#32;==&#32;SEVEN_SEG_TWO)
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_7seg_8c_1ae89a46a801483d679b68d653efd31267">sevenSegSendChar</link>(gu8_settedTemp%10,SEVEN_SEG_TWO);
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_7seg_8c_1ae89a46a801483d679b68d653efd31267">sevenSegSendChar</link>(gu8_settedTemp/10,SEVEN_SEG_ONE);
00259 &#32;&#32;&#32;
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00261 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;&#32;update&#32;u8_selectedSevenSeg&#32;variable&#32;to&#32;alternate&#32;between&#32;the&#32;two&#32;seven&#32;seg.</emphasis>
00262 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_selectedSevenSeg&#32;=&#32;(u8_selectedSevenSeg&#32;==&#32;SEVEN_SEG_ONE)?&#32;SEVEN_SEG_TWO&#32;:&#32;SEVEN_SEG_ONE;
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_flashCounter&#32;==&#32;SSD_FLASHING_CYCLE)
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_ssdDisableFalg&#32;=&#32;!u8_ssdDisableFalg;
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_flashCounter&#32;&#32;&#32;=&#32;&#32;0&#32;;
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_ssdDisableFalg)
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_7seg_8c_1a48b828fc607ed48b54488f8cb46696f8">disableSevenSeg</link>();
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_flashCounter++;
00279 &#32;&#32;&#32;&#32;}&#32;&#32;&#32;
00280 }
00281 
00282 
<anchor xml:id="_main_8c_source_1l00283"/><link linkend="_main_8c_1a4e7c6b5809aef7a48e6ff16156c907b5">00283</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_main_8c_1a4e7c6b5809aef7a48e6ff16156c907b5">tempTask</link>()
00284 {
00285 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_TempPos&#32;=&#32;0;
00286 &#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1ac55f3ae81b5bc9053760baacf57e47f4">float64_t</link>&#32;clsius;
00287 &#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1a1f1825b69244eb3ad2c7165ddc99c956">uint16_t</link>&#32;u16_ADC_value&#32;=&#32;0;
00288 &#32;&#32;&#32;&#32;
00294 &#32;&#32;&#32;&#32;<link linkend="_adc_8c_1a081e50ee005f48bbab04c857524ed3b9">ADC_trigger</link>(TEMP_ADC_CHNL);
00295 &#32;&#32;&#32;&#32;
00296 &#32;&#32;&#32;&#32;<emphasis role="comment">//this&#32;eq&#32;from&#32;the&#32;data&#32;sheet&#32;of&#32;the&#32;LM25&#32;module</emphasis>
00297 &#32;&#32;&#32;&#32;clsius&#32;=&#32;(((<link linkend="_adc_8c_1a07bb473f93a6ad88d006d3f38ea209e1">getADC_value</link>(&amp;u16_ADC_value))*4.88)/(10.00));
00298 &#32;&#32;&#32;&#32;currentTemp&#32;=&#32;(<link linkend="_std__types_8h_1a06896e8c53f721507066c079052171f8">uint32_t</link>)clsius;&#32;<emphasis role="comment">//this&#32;is&#32;for&#32;SSD&#32;</emphasis>
00299 &#32;&#32;&#32;&#32;tempValues[u8_TempPos]&#32;=&#32;(<link linkend="_std__types_8h_1a06896e8c53f721507066c079052171f8">uint32_t</link>)clsius;&#32;<emphasis role="comment">//this&#32;is&#32;for&#32;temp&#32;control&#32;task</emphasis>
00300 &#32;&#32;&#32;&#32;u8_TempPos++;
00301 &#32;&#32;&#32;&#32;
00302 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_TempPos&#32;==&#32;TEMP_VLAUES)&#32;<emphasis role="comment">//reach&#32;array&#32;boundry</emphasis>
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u8_TempPos&#32;=&#32;0;
00304 }
00305 
<anchor xml:id="_main_8c_source_1l00306"/><link linkend="_main_8c_1ab90881fea8078c203ba2c8538c00593a">00306</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_main_8c_1ab90881fea8078c203ba2c8538c00593a">appInit</link>()
00307 {
00308 &#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1afcc83c805035d83c6834e8fcfd83e2b1">DIO_Init</link>();
00310 
00316 &#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(HEATER_ELEMENT,LOWL);
00317 &#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(COOLER_ELEMENT,LOWL);
00318 &#32;&#32;&#32;&#32;<emphasis role="comment">//init&#32;temp&#32;control&#32;LED&#32;AS&#32;0</emphasis>
00319 &#32;&#32;&#32;&#32;<link linkend="__d_i_o_8c_1ab261c4b7670e6bacd1c7ad1839ab95b0">DIO_Write</link>(TEMP_CONTROL_LED,LOWL);&#32;&#32;
00320 &#32;&#32;&#32;&#32;<link linkend="_btn_8c_1a4d8709c705e4850882d44e4b68681421">BTN_Init</link>();
00321 &#32;&#32;&#32;&#32;<link linkend="_isr_8c_1a097b132f44acb3a9bbe5f60f62d339d2">interruptsInit</link>();
00322 &#32;&#32;&#32;&#32;<link linkend="_7seg_8c_1a60579fecccc40e10b8ecca856466d540">sevenSegInit</link>();
00323 &#32;&#32;&#32;&#32;<link linkend="_7seg_8c_1a48b828fc607ed48b54488f8cb46696f8">disableSevenSeg</link>();
00324 &#32;&#32;&#32;&#32;<link linkend="_adc_8c_1ab63839ae7368b215a9e0e3381427d76a">ADC_Init</link>();
00325 &#32;&#32;&#32;&#32;<link linkend="_i2c_8c_1a5730d9445429351b9f750084c5cb5aae">i2c_init</link>();
00326 &#32;&#32;&#32;&#32;<link linkend="__s_o_s_8c_1aa4a8a75bc8f33c7ff7c7072ec695b763">SOS_Init</link>();
00327 &#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_i&#32;=&#32;0;
00328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;u8_i&lt;&#32;TEMP_VLAUES&#32;;u8_i++)
00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempValues[u8_i]&#32;=&#32;0;
00330 &#32;&#32;&#32;&#32;
00337 &#32;&#32;&#32;&#32;<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_usedPattern&#32;=&#32;<link linkend="_eeprom__ext_8c_1a68ff2caae3c67d6e12b84a0f1164dd6a">e2pext_r</link>(0x02);
00338 &#32;&#32;&#32;&#32;
00339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_usedPattern&#32;!=&#32;USED_PATTERN)
00340 &#32;&#32;&#32;&#32;{
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_eeprom__ext_8c_1a3b6e76a761d4f025a99416f03ef098ed">e2pext_w</link>(0x00,60);
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_eeprom__ext_8c_1a3b6e76a761d4f025a99416f03ef098ed">e2pext_w</link>(0x02,USED_PATTERN);
00343 &#32;&#32;&#32;&#32;}
00345 &#32;&#32;&#32;&#32;gu8_mode&#32;=&#32;<link linkend="_main_8c_1ac5cc1393a3907945816f4b7e09049732a1f6ccf55deffd73d67d5390d50ad637a">NORM_MODE</link>;
00346 &#32;&#32;&#32;&#32;currentTemp&#32;&#32;&#32;=&#32;0;
00347 &#32;&#32;&#32;&#32;gu8_settedTemp&#32;=&#32;60;
00348 &#32;&#32;&#32;&#32;gu8_TempControlFlag&#32;=&#32;0&#32;;
00349 &#32;&#32;&#32;&#32;gu8_deviceDisableFlag&#32;=&#32;TRUE;&#32;&#32;&#32;
00350 }
00351 
00352 
<anchor xml:id="_main_8c_source_1l00353"/><link linkend="_main_8c_1abf7e98ccf36d8f640a03030aad64c7f2">00353</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_main_8c_1abf7e98ccf36d8f640a03030aad64c7f2">checkONBtnStatus</link>()
00354 {
00355 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00356 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;this&#32;function&#32;used&#32;to&#32;check&#32;on&#32;the&#32;on/off&#32;btn&#32;</emphasis>
00357 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;if&#32;the&#32;system&#32;on&#32;the&#32;off&#32;state</emphasis>
00358 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00359 &#32;&#32;&#32;&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3">BtnStateType</link>&#32;u8_onOffBtnStatus;
00360 &#32;&#32;&#32;&#32;<link linkend="_btn_8c_1af9d0881c43b0ff77296a25abd27b5929">BTN_Manager</link>();
00361 &#32;&#32;&#32;&#32;<link linkend="_btn_8c_1a5aeeef57fe3d8638de39db5ed01efaef">BTN_GetState</link>(&amp;u8_onOffBtnStatus,ON_OFF_BTN);
00362 &#32;&#32;&#32;&#32;
00363 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(u8_onOffBtnStatus&#32;==&#32;<link linkend="_btn_8h_1a5c54de8c0efd647f4fb3d55269f661b3a9da5e7a94f96f0bb7961458b4a4197ee">BUT_ON</link>)
00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gu8_deviceDisableFlag&#32;=&#32;!gu8_deviceDisableFlag;
00365 }
00366 
00367 
00368 
<anchor xml:id="_main_8c_source_1l00369"/><link linkend="_main_8c_1a6288eba0f8e8ad3ab1544ad731eb7667">00369</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_main_8c_1a6288eba0f8e8ad3ab1544ad731eb7667">main</link>(<emphasis role="keywordtype">void</emphasis>){
00370 &#32;&#32;&#32;&#32;<link linkend="_main_8c_1ab90881fea8078c203ba2c8538c00593a">appInit</link>();
00376 &#32;&#32;&#32;&#32;<link linkend="__s_o_s_8c_1a085b92af3cd18aadc5f6c5c4979969fe">SOS_createTask</link>(1,<link linkend="_main_8c_1a4e7c6b5809aef7a48e6ff16156c907b5">tempTask</link>,100,PERIODIC,1);
00377 &#32;&#32;&#32;&#32;<link linkend="__s_o_s_8c_1a085b92af3cd18aadc5f6c5c4979969fe">SOS_createTask</link>(3,<link linkend="_main_8c_1aa3704144322ffcbb82cc88ee36f1a9da">buttonTask</link>,50,PERIODIC,2);
00378 &#32;&#32;&#32;&#32;<link linkend="__s_o_s_8c_1a085b92af3cd18aadc5f6c5c4979969fe">SOS_createTask</link>(4,<link linkend="_main_8c_1aabcbdc9715896bcbf677585867fd734c">tempControlTask</link>,100,PERIODIC,3);
00379 &#32;&#32;&#32;&#32;<link linkend="__s_o_s_8c_1a085b92af3cd18aadc5f6c5c4979969fe">SOS_createTask</link>(2,<link linkend="_main_8c_1ac1e5ea28aae6331165f91deabb3a7101">sevenSegTask</link>,50,PERIODIC,4);
00380 
00381 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(1)
00382 &#32;&#32;&#32;&#32;{
00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(gu8_deviceDisableFlag&#32;==&#32;TRUE)
00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8c_1ab90881fea8078c203ba2c8538c00593a">appInit</link>();
00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(gu8_deviceDisableFlag&#32;==&#32;TRUE)
00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8c_1abf7e98ccf36d8f640a03030aad64c7f2">checkONBtnStatus</link>();
00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_o_s_8c_1a8dd58b17a3ae907bda4c429f78883d67">SOS_run</link>();
00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
00405 
00406 &#32;&#32;&#32;&#32;}
00407 &#32;&#32;&#32;&#32;
00408 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00409 }
</programlisting></section>
