<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_adc_8c_source">
<title>adc.c</title>
<indexterm><primary>F:/Carier/Embedded/PIC/ElectricalWaterHeater/MCAL/ADC/adc.c</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/*&#32;########################################################################</emphasis>
00002 <emphasis role="comment"></emphasis>
00003 <emphasis role="comment">&#32;&#32;&#32;PICsim&#32;-&#32;PIC&#32;simulator&#32;http://sourceforge.net/projects/picsim/</emphasis>
00004 <emphasis role="comment"></emphasis>
00005 <emphasis role="comment">&#32;&#32;&#32;########################################################################</emphasis>
00006 <emphasis role="comment"></emphasis>
00007 <emphasis role="comment">&#32;&#32;&#32;Copyright&#32;(c)&#32;:&#32;2015&#32;&#32;Luis&#32;Claudio&#32;Gambôa&#32;Lopes</emphasis>
00008 <emphasis role="comment"></emphasis>
00009 <emphasis role="comment">&#32;&#32;&#32;This&#32;program&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
00010 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
00011 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;2,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
00012 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
00013 <emphasis role="comment"></emphasis>
00014 <emphasis role="comment">&#32;&#32;&#32;This&#32;program&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
00015 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
00016 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
00017 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
00018 <emphasis role="comment"></emphasis>
00019 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License</emphasis>
00020 <emphasis role="comment">&#32;&#32;&#32;along&#32;with&#32;this&#32;program;&#32;if&#32;not,&#32;write&#32;to&#32;the&#32;Free&#32;Software</emphasis>
00021 <emphasis role="comment">&#32;&#32;&#32;Foundation,&#32;Inc.,&#32;675&#32;Mass&#32;Ave,&#32;Cambridge,&#32;MA&#32;02139,&#32;USA.</emphasis>
00022 <emphasis role="comment"></emphasis>
00023 <emphasis role="comment">&#32;&#32;&#32;For&#32;e-mail&#32;suggestions&#32;:&#32;&#32;lcgamboa@yahoo.com</emphasis>
00024 <emphasis role="comment">&#32;&#32;&#32;########################################################################&#32;*/</emphasis>
00025 
00026 <emphasis role="preprocessor">#include&#32;&lt;xc.h&gt;</emphasis>
00027 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_adc_8h">adc.h</link>&quot;</emphasis>
00028 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_adc___cfg_8h">adc_Cfg.h</link>&quot;</emphasis>
00029 <emphasis role="preprocessor">#define&#32;ADC_IDLE_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
00030 <emphasis role="preprocessor">#define&#32;ADC_INIT_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
00031 <emphasis role="preprocessor">#define&#32;MAX_SUPPORTED_CHANAL&#32;8</emphasis>
00032 
00033 <emphasis role="preprocessor">#define&#32;ADC_CHANAL_SHIFT&#32;&#32;&#32;&#32;&#32;(3)</emphasis>
00034 <emphasis role="preprocessor">#define&#32;ADC_CHANAL_MASK&#32;&#32;&#32;&#32;&#32;&#32;(0x38)</emphasis>
00035 <emphasis role="preprocessor">#define&#32;ADC_ON_BIT_MASK&#32;&#32;&#32;&#32;&#32;&#32;(0X01)</emphasis>
<anchor xml:id="_adc_8c_source_1l00036"/><link linkend="_adc_8h_1a5a326621cf2bed38aad87c1c9a06fa9b">00036</link> <link linkend="_std__types_8h_1a1f1825b69244eb3ad2c7165ddc99c956">uint16_t</link>&#32;<link linkend="_adc_8c_1a5a326621cf2bed38aad87c1c9a06fa9b">gu8_ADC_ADCValue</link>;
<anchor xml:id="_adc_8c_source_1l00037"/><link linkend="_adc_8c_1a01787ad744451fdef348a05fc3fae533">00037</link> <link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;<link linkend="_adc_8c_1a01787ad744451fdef348a05fc3fae533">gu8_ADC_State</link>&#32;=ADC_IDLE_STATE&#32;;
00038 
00039 
00040 
<anchor xml:id="_adc_8c_source_1l00041"/><link linkend="_adc_8h_1ab63839ae7368b215a9e0e3381427d76a">00041</link> <link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dc">ERROR_STATE</link>&#32;<link linkend="_adc_8c_1ab63839ae7368b215a9e0e3381427d76a">ADC_Init</link>(<emphasis role="keywordtype">void</emphasis>)
00042 {
00043 &#32;&#32;&#32;&#32;<emphasis role="comment">/*check</emphasis>
00044 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;if&#32;the&#32;module&#32;already&#32;initlaized</emphasis>
00045 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;then&#32;change&#32;function&#32;state&#32;to&#32;NOK&#32;&#32;and&#32;report&#32;error</emphasis>
00046 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;else</emphasis>
00047 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;load&#32;ADCON1&#32;AND&#32;ADCON0&#32;WITH&#32;RESPECTIVE&#32;SETTING&#32;VALUES</emphasis>
00048 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00049 &#32;&#32;&#32;&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dc">ERROR_STATE</link>&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dca2bc49ec37d6a5715dd23e85f1ff5bb59">OK</link>;
00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_adc_8c_1a5a326621cf2bed38aad87c1c9a06fa9b">gu8_ADC_ADCValue</link>&#32;==&#32;ADC_INIT_STATE)
00051 &#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dcab057804c04435b55514a8babf5434ef6">NOK</link>;&#32;&#32;
00053 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__error_handler_8c_1ac5764457ee31a7415fc6936d103cb80b">error_handler</link>(ADC_MODULE_ERROR_NUM+MULTIPLE_INITALIZATION);
00054 &#32;&#32;&#32;&#32;}
00055 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00056 &#32;&#32;&#32;&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ADCON0&#32;=&#32;<link linkend="_adc___cfg_8c_1a3b16aa1f93a1529f802d2da8831729e7">gstr_ADC_Config</link>.<link linkend="_structgstr___a_d_c___config_param__t_1a7b1a34cb1b77810d4ed7977f1727c82a">ADC_CNTRL_0</link>;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ADCON1&#32;=&#32;<link linkend="_adc___cfg_8c_1a3b16aa1f93a1529f802d2da8831729e7">gstr_ADC_Config</link>.<link linkend="_structgstr___a_d_c___config_param__t_1a0183cd170a10efdeb638400233d8f83a">ADC_CNTRL_1</link>;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_adc_8c_1a5a326621cf2bed38aad87c1c9a06fa9b">gu8_ADC_ADCValue</link>&#32;=&#32;0;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_adc_8c_1a01787ad744451fdef348a05fc3fae533">gu8_ADC_State</link>&#32;=&#32;ADC_INIT_STATE;
00062 &#32;&#32;&#32;&#32;}
00063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e_funStatus;
00064 }
00065 
00066 
<anchor xml:id="_adc_8c_source_1l00067"/><link linkend="_adc_8h_1a081e50ee005f48bbab04c857524ed3b9">00067</link> <link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dc">ERROR_STATE</link>&#32;<link linkend="_adc_8c_1a081e50ee005f48bbab04c857524ed3b9">ADC_trigger</link>(<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;u8_canal)
00068 {
00069 &#32;&#32;&#32;&#32;<emphasis role="comment">/*check</emphasis>
00070 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;if&#32;the&#32;module&#32;is&#32;not&#32;&#32;initlaized</emphasis>
00071 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;then&#32;change&#32;function&#32;state&#32;to&#32;NOK&#32;&#32;and&#32;report&#32;error</emphasis>
00072 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;else&#32;if&#32;not&#32;supported&#32;chanal&#32;number&#32;</emphasis>
00073 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;then&#32;change&#32;function&#32;state&#32;to&#32;NOK&#32;&#32;and&#32;report&#32;error</emphasis>
00074 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;else</emphasis>
00075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;check&#32;if&#32;the&#32;prevoius&#32;reading&#32;is&#32;done&#32;</emphasis>
00076 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;trigger&#32;another&#32;conversion&#32;for&#32;the&#32;selected&#32;chanal</emphasis>
00077 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;load&#32;ADCON0&#32;WITH&#32;RESPECTIVE&#32;SETTING&#32;VALUES&#32;to&#32;the&#32;selected&#32;chanal</emphasis>
00078 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00079 &#32;&#32;&#32;&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dc">ERROR_STATE</link>&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dca2bc49ec37d6a5715dd23e85f1ff5bb59">OK</link>;
00080 &#32;&#32;&#32;&#32;
00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_adc_8c_1a01787ad744451fdef348a05fc3fae533">gu8_ADC_State</link>&#32;==&#32;ADC_IDLE_STATE)
00082 &#32;&#32;&#32;&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dcab057804c04435b55514a8babf5434ef6">NOK</link>;&#32;
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__error_handler_8c_1ac5764457ee31a7415fc6936d103cb80b">error_handler</link>(ADC_MODULE_ERROR_NUM+MODULE_NOT_INITALIZED);
00085 &#32;&#32;&#32;&#32;}
00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(u8_canal&#32;&gt;&#32;MAX_SUPPORTED_CHANAL)
00087 &#32;&#32;&#32;&#32;{
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dcab057804c04435b55514a8babf5434ef6">NOK</link>;&#32;
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__error_handler_8c_1ac5764457ee31a7415fc6936d103cb80b">error_handler</link>(ADC_MODULE_ERROR_NUM+INVALAD_PARAMETER);
00090 &#32;&#32;&#32;&#32;}
00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00092 &#32;&#32;&#32;&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ADCON0bits.GO&#32;==&#32;0)
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_adc_8c_1a5a326621cf2bed38aad87c1c9a06fa9b">gu8_ADC_ADCValue</link>&#32;=&#32;((((<link linkend="_std__types_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>)ADRESH)&lt;&lt;2)|(ADRESL&gt;&gt;6));
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ADCON0&#32;|=&#32;((u8_canal&lt;&lt;ADC_CHANAL_SHIFT)&amp;(ADC_CHANAL_MASK))|(ADC_ON_BIT_MASK);
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ADCON0bits.GO=1;
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00100 &#32;&#32;&#32;&#32;}
00101 &#32;&#32;&#32;&#32;
00102 &#32;&#32;&#32;&#32;
00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e_funStatus;
00104 }
00105 
<anchor xml:id="_adc_8c_source_1l00106"/><link linkend="_adc_8h_1a07bb473f93a6ad88d006d3f38ea209e1">00106</link> <link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dc">ERROR_STATE</link>&#32;<link linkend="_adc_8c_1a07bb473f93a6ad88d006d3f38ea209e1">getADC_value</link>(<link linkend="_std__types_8h_1a1f1825b69244eb3ad2c7165ddc99c956">uint16_t</link>*&#32;u16p_adcValue)
00107 {
00108 &#32;&#32;&#32;&#32;
00109 &#32;&#32;&#32;&#32;<emphasis role="comment">/*check</emphasis>
00110 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;if&#32;the&#32;module&#32;is&#32;not&#32;&#32;initlaized</emphasis>
00111 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;then&#32;change&#32;function&#32;state&#32;to&#32;NOK&#32;&#32;and&#32;report&#32;error</emphasis>
00112 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;else&#32;if&#32;pointer&#32;is&#32;null</emphasis>
00113 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;then&#32;change&#32;function&#32;state&#32;to&#32;NOK&#32;&#32;and&#32;report&#32;error</emphasis>
00114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;else</emphasis>
00115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&#32;&#32;&#32;&#32;&#32;update&#32;pointer&#32;value&#32;with&#32;last&#32;ADC&#32;data</emphasis>
00116 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00117 &#32;&#32;&#32;&#32;
00118 &#32;&#32;&#32;&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dc">ERROR_STATE</link>&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dca2bc49ec37d6a5715dd23e85f1ff5bb59">OK</link>;
00119 &#32;&#32;&#32;&#32;
00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_adc_8c_1a01787ad744451fdef348a05fc3fae533">gu8_ADC_State</link>&#32;==&#32;ADC_IDLE_STATE)
00121 &#32;&#32;&#32;&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dcab057804c04435b55514a8babf5434ef6">NOK</link>;&#32;
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__error_handler_8c_1ac5764457ee31a7415fc6936d103cb80b">error_handler</link>(ADC_MODULE_ERROR_NUM+MODULE_NOT_INITALIZED);
00124 &#32;&#32;&#32;&#32;}
00125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(u16p_adcValue&#32;==&#32;&#32;NULL)
00126 &#32;&#32;&#32;&#32;{
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e_funStatus&#32;=&#32;<link linkend="__system_errors_8h_1a37f868640e72b2740019c30ecca6e8dcab057804c04435b55514a8babf5434ef6">NOK</link>;&#32;
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__error_handler_8c_1ac5764457ee31a7415fc6936d103cb80b">error_handler</link>(ADC_MODULE_ERROR_NUM+NULL_PTR_ERROR);
00129 &#32;&#32;&#32;&#32;}
00130 &#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00131 &#32;&#32;&#32;&#32;{
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*u16p_adcValue&#32;=&#32;<link linkend="_adc_8c_1a5a326621cf2bed38aad87c1c9a06fa9b">gu8_ADC_ADCValue</link>;
00133 &#32;&#32;&#32;&#32;}
00134 &#32;&#32;&#32;&#32;
00135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e_funStatus;
00136 }
</programlisting></section>
